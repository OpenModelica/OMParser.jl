name: Release

on:
  release:

jobs:
  build:
    runs-on: ${{ matrix.sys.os }}
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: 'msys2 {0}' }
          - { os: ubuntu-latest,  shell: bash  }
          - { os: macos-latest,   shell: bash  }
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    name: building OMParser.jl/lib/parser
    steps:
    - name: setup julia environment
      uses: julia-actions/setup-julia@v1
      with:
        version: "1.7.0"
    - name: setup msys2 environment
      uses: msys2/setup-msys2@v2
      with:
        update: false
        platform-check-severity: warn
        install: base-devel mingw-w64-x86_64-toolchain
        path-type: inherit # to find julia!
    - name: set git to use LF on Windows
      if: contains(matrix.sys.os, 'windows')
      run: |
        git config --system core.autocrlf false
        git config --system core.eol lf
    - uses: actions/checkout@v2
    - name: configure the library and build
      run: |
        which gcc
        gcc --version
        cd lib/parser
        autoconf
        ./configure
        make
        cd ../build/lib
        tar -czvf ${{matrix.sys.os}}-library.tar.gz *
        mv ${{matrix.sys.os}}-library.tar.gz '${{github.workspace}}/'.
    - name:  Run the testsuite
      uses: julia-actions/julia-runtest@v1
      with:
        version: "1.7.0"
      - name: upload library
      uses: actions/upload-artifact@v2
      with:
        name: parser-library
        path: ${{github.workspace}}/${{matrix.sys.os}}-library.tar.gz
    - name: release
       uses: actions/create-release@v1
       id: create_release
       with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
    env:
      GITHUB_TOKEN: ${{ github.token }}
      - name: release artifacts
  - name: upload release artifact
    uses: actions/upload-release-asset@v1
    env:
      GITHUB_TOKEN: ${{ github.token }}
    with:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      asset_path: ${{github.workspace}}/${{matrix.sys.os}}-library.tar.gz
      asset_name: ${{github.workspace}}/${{matrix.sys.os}}-library.tar.gz
      asset_content_type: zip